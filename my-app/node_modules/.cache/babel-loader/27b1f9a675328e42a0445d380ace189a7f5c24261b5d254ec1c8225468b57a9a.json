{"ast":null,"code":"'use strict';\n\nconst paypalhttp = require('@paypal/paypalhttp');\nconst SANDBOX = 'https://api.sandbox.paypal.com';\nconst LIVE = 'https://api.paypal.com';\nconst SANDBOX_WEB_URL = 'https://www.sandbox.paypal.com';\nconst LIVE_WEB_URL = 'https://www.paypal.com';\n\n/**\n * Base class for PayPal Environments\n */\nclass PayPalEnvironment extends paypalhttp.Environment {\n  /**\n   * @param {string} clientId - The client id for this environment\n   * @param {string} clientSecret - The client secret\n   * @param {string} baseUrl - The base url to execute requests\n   * @param {string} webUrl - The web url to authorize user's consent\n   */\n  constructor(clientId, clientSecret, baseUrl, webUrl) {\n    super(baseUrl);\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.webUrl = webUrl;\n  }\n\n  /**\n   * Authorization header string for basic authentication with the current client id and secret\n   * @return {string} - The authorization header value\n   */\n  authorizationString() {\n    let encoded = new Buffer(`${this.clientId}:${this.clientSecret}`).toString('base64');\n    return `Basic ${encoded}`;\n  }\n}\n\n/**\n * Sandbox Environment\n */\nclass SandboxEnvironment extends PayPalEnvironment {\n  constructor(clientId, clientSecret) {\n    super(clientId, clientSecret, SANDBOX, SANDBOX_WEB_URL);\n  }\n}\n\n/**\n * Live Environment\n */\nclass LiveEnvironment extends PayPalEnvironment {\n  constructor(clientId, clientSecret) {\n    super(clientId, clientSecret, LIVE, LIVE_WEB_URL);\n  }\n}\nmodule.exports = {\n  PayPalEnvironment: PayPalEnvironment,\n  LiveEnvironment: LiveEnvironment,\n  SandboxEnvironment: SandboxEnvironment\n};","map":{"version":3,"names":["paypalhttp","require","SANDBOX","LIVE","SANDBOX_WEB_URL","LIVE_WEB_URL","PayPalEnvironment","Environment","constructor","clientId","clientSecret","baseUrl","webUrl","authorizationString","encoded","Buffer","toString","SandboxEnvironment","LiveEnvironment","module","exports"],"sources":["C:/Users/gonca/my-app/node_modules/@paypal/checkout-server-sdk/lib/core/paypal_environment.js"],"sourcesContent":["'use strict';\n\nconst paypalhttp = require('@paypal/paypalhttp');\nconst SANDBOX = 'https://api.sandbox.paypal.com';\nconst LIVE = 'https://api.paypal.com';\nconst SANDBOX_WEB_URL = 'https://www.sandbox.paypal.com';\nconst LIVE_WEB_URL = 'https://www.paypal.com';\n\n/**\n * Base class for PayPal Environments\n */\nclass PayPalEnvironment extends paypalhttp.Environment {\n  /**\n   * @param {string} clientId - The client id for this environment\n   * @param {string} clientSecret - The client secret\n   * @param {string} baseUrl - The base url to execute requests\n   * @param {string} webUrl - The web url to authorize user's consent\n   */\n  constructor(clientId, clientSecret, baseUrl, webUrl) {\n    super(baseUrl);\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.webUrl = webUrl;\n  }\n\n  /**\n   * Authorization header string for basic authentication with the current client id and secret\n   * @return {string} - The authorization header value\n   */\n  authorizationString() {\n    let encoded = new Buffer(`${this.clientId}:${this.clientSecret}`).toString('base64');\n\n    return `Basic ${encoded}`;\n  }\n}\n\n/**\n * Sandbox Environment\n */\nclass SandboxEnvironment extends PayPalEnvironment {\n\n  constructor(clientId, clientSecret) {\n    super(clientId, clientSecret, SANDBOX, SANDBOX_WEB_URL);\n  }\n}\n\n/**\n * Live Environment\n */\nclass LiveEnvironment extends PayPalEnvironment {\n\n  constructor(clientId, clientSecret) {\n    super(clientId, clientSecret, LIVE, LIVE_WEB_URL);\n  }\n}\n\nmodule.exports = {\n  PayPalEnvironment: PayPalEnvironment,\n  LiveEnvironment: LiveEnvironment,\n  SandboxEnvironment: SandboxEnvironment\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAChD,MAAMC,OAAO,GAAG,gCAAgC;AAChD,MAAMC,IAAI,GAAG,wBAAwB;AACrC,MAAMC,eAAe,GAAG,gCAAgC;AACxD,MAAMC,YAAY,GAAG,wBAAwB;;AAE7C;AACA;AACA;AACA,MAAMC,iBAAiB,SAASN,UAAU,CAACO,WAAW,CAAC;EACrD;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACnD,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,MAAM,GAAGA,MAAM;EACtB;;EAEA;AACF;AACA;AACA;EACEC,mBAAmB,GAAG;IACpB,IAAIC,OAAO,GAAG,IAAIC,MAAM,CAAE,GAAE,IAAI,CAACN,QAAS,IAAG,IAAI,CAACC,YAAa,EAAC,CAAC,CAACM,QAAQ,CAAC,QAAQ,CAAC;IAEpF,OAAQ,SAAQF,OAAQ,EAAC;EAC3B;AACF;;AAEA;AACA;AACA;AACA,MAAMG,kBAAkB,SAASX,iBAAiB,CAAC;EAEjDE,WAAW,CAACC,QAAQ,EAAEC,YAAY,EAAE;IAClC,KAAK,CAACD,QAAQ,EAAEC,YAAY,EAAER,OAAO,EAAEE,eAAe,CAAC;EACzD;AACF;;AAEA;AACA;AACA;AACA,MAAMc,eAAe,SAASZ,iBAAiB,CAAC;EAE9CE,WAAW,CAACC,QAAQ,EAAEC,YAAY,EAAE;IAClC,KAAK,CAACD,QAAQ,EAAEC,YAAY,EAAEP,IAAI,EAAEE,YAAY,CAAC;EACnD;AACF;AAEAc,MAAM,CAACC,OAAO,GAAG;EACfd,iBAAiB,EAAEA,iBAAiB;EACpCY,eAAe,EAAEA,eAAe;EAChCD,kBAAkB,EAAEA;AACtB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}