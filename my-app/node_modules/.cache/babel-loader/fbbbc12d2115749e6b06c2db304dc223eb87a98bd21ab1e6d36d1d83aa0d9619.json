{"ast":null,"code":"'use strict';\n\n/**\n * A small amount of time to loosen the token expiration algorithm\n * @constant EXPIRATION_THRESHOLD\n * @type {number}\n */\nconst EXPIRATION_THRESHOLD = 500;\n\n/**\n * An OAuth2 access token\n */\nclass AccessToken {\n  /**\n   * @param {object} options - The access token object as it was granted by the token endpoint\n   * @param {string} options.access_token - The access token\n   * @param {string} options.token_type - The token type\n   * @param {number} options.expires_in - The duration of the token in milliseconds\n   * @param {string} options.refresh_token - The refresh token if any to refresh the current token\n   */\n  constructor(options) {\n    this._accessToken = options.access_token;\n    this._tokenType = options.token_type;\n    this._expiresIn = options.expires_in * 1000;\n    this._dateCreated = Date.now();\n  }\n\n  /**\n   * Get the expiration status of the token\n   * @return {boolean} - True if the token is expired otherwise false\n   */\n  isExpired() {\n    return Date.now() > this._dateCreated + this._expiresIn - EXPIRATION_THRESHOLD;\n  }\n\n  /**\n   * Get the value of an Authorization header with the current access token\n   * @return {string} - The Authorization header value\n   */\n  authorizationString() {\n    return `${this._tokenType} ${this._accessToken}`;\n  }\n}\nmodule.exports = {\n  AccessToken: AccessToken\n};","map":{"version":3,"names":["EXPIRATION_THRESHOLD","AccessToken","constructor","options","_accessToken","access_token","_tokenType","token_type","_expiresIn","expires_in","_dateCreated","Date","now","isExpired","authorizationString","module","exports"],"sources":["C:/Users/gonca/my-app/node_modules/@paypal/checkout-server-sdk/lib/core/access_token.js"],"sourcesContent":["'use strict';\n\n/**\n * A small amount of time to loosen the token expiration algorithm\n * @constant EXPIRATION_THRESHOLD\n * @type {number}\n */\nconst EXPIRATION_THRESHOLD = 500;\n\n/**\n * An OAuth2 access token\n */\nclass AccessToken {\n  /**\n   * @param {object} options - The access token object as it was granted by the token endpoint\n   * @param {string} options.access_token - The access token\n   * @param {string} options.token_type - The token type\n   * @param {number} options.expires_in - The duration of the token in milliseconds\n   * @param {string} options.refresh_token - The refresh token if any to refresh the current token\n   */\n  constructor(options) {\n    this._accessToken = options.access_token;\n    this._tokenType = options.token_type;\n    this._expiresIn = options.expires_in * 1000;\n    this._dateCreated = Date.now();\n  }\n\n  /**\n   * Get the expiration status of the token\n   * @return {boolean} - True if the token is expired otherwise false\n   */\n  isExpired() {\n    return Date.now() > this._dateCreated + this._expiresIn - EXPIRATION_THRESHOLD;\n  }\n\n  /**\n   * Get the value of an Authorization header with the current access token\n   * @return {string} - The Authorization header value\n   */\n  authorizationString() {\n    return `${this._tokenType} ${this._accessToken}`;\n  }\n}\n\nmodule.exports = {\n  AccessToken: AccessToken\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAG,GAAG;;AAEhC;AACA;AACA;AACA,MAAMC,WAAW,CAAC;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,YAAY,GAAGD,OAAO,CAACE,YAAY;IACxC,IAAI,CAACC,UAAU,GAAGH,OAAO,CAACI,UAAU;IACpC,IAAI,CAACC,UAAU,GAAGL,OAAO,CAACM,UAAU,GAAG,IAAI;IAC3C,IAAI,CAACC,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE;EAChC;;EAEA;AACF;AACA;AACA;EACEC,SAAS,GAAG;IACV,OAAOF,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAACF,YAAY,GAAG,IAAI,CAACF,UAAU,GAAGR,oBAAoB;EAChF;;EAEA;AACF;AACA;AACA;EACEc,mBAAmB,GAAG;IACpB,OAAQ,GAAE,IAAI,CAACR,UAAW,IAAG,IAAI,CAACF,YAAa,EAAC;EAClD;AACF;AAEAW,MAAM,CAACC,OAAO,GAAG;EACff,WAAW,EAAEA;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}