import r,{Children as o,cloneElement as t,useMemo as e}from"react";import{useButton as i}from"@react-aria/button";import{mergeProps as s}from"@react-aria/utils";import{Button as n,Text as p}from"../index";import{pickChild as a}from"../utils/collections";import{__DEV__ as m}from"../utils/assertion";import{usePopoverContext as f}from"./popover-context";import{jsx as l}from"react/jsx-runtime";const c=r.forwardRef(((r,m)=>{const{state:c,triggerRef:g,getTriggerProps:u}=f(),{children:d,...P}=r,x=e((()=>"string"==typeof d?l(p,{children:d}):o.only(d)),[d]),{onPress:v,onPressStart:S,...h}=e((()=>u(s(x.props,P),x.ref)),[u,x.props,P,x.ref]),{buttonProps:y}=i({onPress:v,onPressStart:S,...h},g),[,b]=a(r.children,n),j=e((()=>void 0!==(null==b?void 0:b[0])),[b]),N=e((()=>({...h,onPressStart:S,onPress:()=>c.open()})),[h,S,c.open]);return t(x,s(h,j?N:y))}));m&&(c.displayName="NextUI.PopoverTrigger"),c.toString=()=>".nextui-popover-trigger";export default c;